{"version":3,"sources":["./src/app/services/services.module.ts","./src/environments/environment.ts","./src/app/services/angular-environment.service.ts","./src/app/ngrx/actions/auth.actions.ts","./src/app/ngrx/reducers/auth.reducer.ts","./src/app/ngrx/reducers/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/angular-platform.service.ts","./src/app/app.module.ts","./src/app/services/angular-logging.service.ts","./src/app/pages/pages.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* eslint @typescript-eslint/no-empty-function: 0 */ // --> OFF\n/* eslint @typescript-eslint/explicit-function-return-type: 0 */ // --> OFF\n\nimport { NgModule } from '@angular/core';\nimport { AngularEnvironmentService } from './angular-environment.service'\nimport { AngularLoggingService } from './angular-logging.service'\nimport { AngularPlatformService } from './angular-platform.service'\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    AngularEnvironmentService,\n    AngularLoggingService,\n    AngularPlatformService,\n  ],\n})\nexport class ServicesModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport interface Environment {\n  production: boolean;\n  name: string;\n}\n\nexport const environment: Environment = {\n  production: false,\n  name: `local`,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService } from '@clementohnz/presentation-common'\nimport { environment } from '../../environments/environment'\n\n@Injectable()\nexport class AngularEnvironmentService implements EnvironmentService {\n  isProduction(): boolean {\n    return environment.production;\n  }\n\n  getEnvironmentName(): string {\n    return environment.name;\n  }\n}\n","/**************************************\n *\n *  KEYS\n *\n *************************************/\n\nimport { Action } from '@ngrx/store';\n\nexport enum AuthStoreActions {\n  LOGIN_USER = `[Authentication Store] LOGIN_USER`,\n  LOGIN_SUCCESSFUL = `[Authentication Store] LOGIN_SUCCESSFUL`,\n}\n\n/**************************************\n *\n *  PAYLOADS\n *\n *************************************/\n\nexport interface LoginUserActionPayload {\n  email: string;\n  password: string;\n}\n\n/**************************************\n *\n *  ACTIONS\n *\n *************************************/\n\nexport interface AuthStoreAction extends Action {\n  payload?: any;\n}\n\n/**\n * Attempt to login the user.\n */\nexport class LoginUserAction implements AuthStoreAction {\n  readonly type = AuthStoreActions.LOGIN_USER;\n  payload: LoginUserActionPayload;\n\n  constructor(email: string, password: string) {\n    this.payload = { email, password };\n  }\n}\n","import { UserModel } from '@clementohnz/core'\nimport { AuthStoreAction, AuthStoreActions } from '../actions/auth.actions'\n\nexport interface AuthStoreState {\n  user: UserModel;\n  isLoggedIn: boolean;\n}\n\nexport const authStoreInitialState: AuthStoreState = {\n  user: null,\n  isLoggedIn: false,\n};\n\nexport function authReducer(\n  state: AuthStoreState = authStoreInitialState,\n  action: AuthStoreAction,\n): AuthStoreState {\n  switch (action.type) {\n    case AuthStoreActions.LOGIN_SUCCESSFUL:\n      const loginSuccessfulPayload = action.payload as UserModel;\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: loginSuccessfulPayload,\n      };\n    default:\n      return state;\n  }\n}\n","import { authReducer, AuthStoreState } from './auth.reducer'\n\nexport const REDUCER_KEY_AUTH = `auth`;\n\nexport interface AppState {\n  [REDUCER_KEY_AUTH]: AuthStoreState;\n}\n\nexport const reducers = {\n  [REDUCER_KEY_AUTH]: authReducer,\n};\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: `app-root`,\n  templateUrl: `./app.component.html`,\n  styleUrls: [`./app.component.scss`],\n})\nexport class AppComponent {\n  title = `reference-angular`;\n}\n","<router-outlet></router-outlet>\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, InjectionToken, PLATFORM_ID } from '@angular/core';\nimport { PlatformService } from '@clementohnz/presentation-common'\n\n@Injectable()\nexport class AngularPlatformService implements PlatformService {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: InjectionToken<Object>,\n  ) {}\n\n  isBrowser(): boolean {\n    return isPlatformBrowser(this.platformId);\n  }\n\n  isServer(): boolean {\n    return isPlatformServer(this.platformId);\n  }\n}\n","import { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { AppComponent } from './app.component'\nimport { SentryErrorLogger } from './errors/loggers/sentry.error-logger'\nimport { reducers } from './ngrx/reducers'\nimport { PagesModule } from './pages/pages.module'\nimport { ServicesModule } from './services/services.module'\n\nexport function rootStateSetter(\n  reducer: ActionReducer<any>,\n): ActionReducer<any> {\n  return (state: any, action: any): ActionReducer<any> => {\n    if (action.type === `SET_ROOT_STATE`) {\n      return action.payload;\n    }\n    return reducer(state, action);\n  };\n}\n\nconst metaReducers: MetaReducer<any, any>[] = [rootStateSetter];\n\nconst routes: Routes = [];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: `serverApp` }),\n    PagesModule,\n    RouterModule.forRoot(routes, {\n      initialNavigation: `enabled`,\n    }),\n    ServicesModule,\n    PagesModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n  ],\n  // providers: [{ provide: ErrorHandler, useClass: SentryErrorLogger }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { LoggingService } from '@clementohnz/presentation-common'\n\nexport enum LoggingColor {\n  GREY = `#bababa`,\n  BLUE = `#4fc1ff`,\n  ORANGE = `#ffb04f`,\n  RED = `#d8494a`,\n}\n\nexport enum LoggingType {\n  DEBUG = `COMPOSER - Debugging`,\n  INFO = `COMPOSER - Information`,\n  WARNING = `COMPOSER - Warning`,\n  CRITICAL = `COMPOSER - Critical`,\n}\n\n@Injectable()\nexport class AngularLoggingService implements LoggingService {\n  public debugLogger = AngularLoggingService.generateLogger(LoggingType.DEBUG);\n  public infoLogger = AngularLoggingService.generateLogger(\n    LoggingType.INFO,\n    LoggingColor.BLUE,\n  );\n  public warningLogger = AngularLoggingService.generateLogger(\n    LoggingType.WARNING,\n    LoggingColor.ORANGE,\n  );\n  public errorLogger = AngularLoggingService.generateLogger(\n    LoggingType.CRITICAL,\n    LoggingColor.RED,\n  );\n\n  /**\n   * Higher-order function used to generate loggers with their respective styles.\n   *\n   * @param type - the type of error. This does not need to match the methods available on DOM {@link Console}\n   * @param color - {@link LoggingColor}\n   */\n  public static generateLogger(\n    type: LoggingType,\n    color: LoggingColor = LoggingColor.GREY,\n  ): (...thingsToLog: any[]) => void {\n    return console.log.bind(null, `%c${type}`, this.generateStyle(color));\n  }\n\n  /**\n   * Generates style that wraps {@link LoggingType} in the console\n   * @param color - {@link LoggingColor}\n   */\n  public static generateStyle(color: LoggingColor): string {\n    // 10/10/2019 - issue inserting enum directly into return string. Have to place in variable first.\n    const convertedColor = `${color}`;\n    return `padding:0.2em 0.4em;border-radius:1.5em;background-color:${convertedColor};font-weight:600;color:#333`;\n  }\n\n  debug(...args: any[]): void {\n    this.debugLogger(...args);\n  }\n\n  info(...args: any[]): void {\n    this.infoLogger(...args);\n  }\n\n  warn(...args: any[]): void {\n    this.warningLogger(...args);\n  }\n\n  error(...args: any[]): void {\n    this.errorLogger(...args);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: `login`,\n    loadChildren: (): Promise<any> =>\n      import(`./login/login.module`).then(\n        (m) => m.LoginModule,\n      ),\n  },\n  {\n    path: `profile`,\n    loadChildren: (): Promise<any> =>\n      import(\n        `./user-profile/user-profile.module`\n      ).then((m) => m.UserProfileModule),\n  },\n  {\n    path: ``,\n    redirectTo: `login`,\n    pathMatch: `full`,\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [],\n})\nexport class PagesModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment';\nimport \"@angular/compiler\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener(`DOMContentLoaded`, () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n});\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}